# Load Dependencies
library(rtracklayer) #[also loads GR, IR and GenomeInfoDb]
library(stringr) # for str_remove
# Load Dependencies
library(rtracklayer) #[also loads GR, IR and GenomeInfoDb]
library(ChIPpeakAnno) #for toGRanges function [maybe not needed for bdg, but works for peaks]
library(stringr) # for str_remove
## bdg stored with MACS peak calls
MACSbroadpeakIgG1 <- "./MACS/snpsplt_broadpeaks_wdups_IgG1/"
MACSbroadpeakIgG2 <- "./MACS/snpsplt_broadpeaks_wdups_IgG2/"
MACSnarrowpeakIgG1 <- "./MACS/snpsplt_narrowpeaks_wdups_IgG1/"
MACSnarrowpeakIgG2 <- "./MACS/snpsplt_narrowpeaks_wdups_IgG2/"
# Automated bed-graph import for snpsplit-MACS peak calls ##importing cut.bed (filtered output)
for (bedGraph in list.files(MACSbroadpeakIgG1, pattern = "treat_pileup.bdg")) {
assign(paste0(str_remove(bedGraph, ".clipped.bedGraph"), "_bedGraph"),
rtracklayer::import.bedGraph(paste0(MACSbroadpeakIgG1, "/", bedGraph)))
print(paste0(MACSbroadpeakIgG1 ,"/", bedGraph))
print(bedGraph)
}
## export to bigwig
for (bedGraph in ls(pattern = "_bedGraph$")) {
print(bedGraph)
bwOut<- paste0(MACSbroadpeakIgG1, "/", str_remove(bedGraph, "_bedGraph"), ".bw")
print(bwOut)
rtracklayer::export.bw(bedGraph, con = bwOut, format = "bw", genome="mm10")
}
# BCS4_B6_wdupsbroadIgG1con_treat_pileup.bdg_bedGraph@seqnames@values <- paste0("chr", BCS4_B6_wdupsbroadIgG1con_treat_pileup.bdg_bedGraph@seqnames@values) dont't set names, but set seqinfo
rtracklayer::export.bw(BCS4_B6_wdupsbroadIgG1con_treat_pileup.bdg_bedGraph, con = "./BCS4_B6_wdupsbroadIgG1con_treat_pileup.bw", format = "bw")
BCS4_B6_wdupsbroadIgG1con_treat_pileup.bdg_bedGraph@seqinfo = Seqinfo(genome="GRCm39")
# BCS4_B6_wdupsbroadIgG1con_treat_pileup.bdg_bedGraph@seqnames@values <- paste0("chr", BCS4_B6_wdupsbroadIgG1con_treat_pileup.bdg_bedGraph@seqnames@values) dont't set names, but set seqinfo
rtracklayer::export.bw(BCS4_B6_wdupsbroadIgG1con_treat_pileup.bdg_bedGraph, con = "./BCS4_B6_wdupsbroadIgG1con_treat_pileup.bw", format = "bw")
rtracklayer::export()
rtracklayer::export()?
?rtracklayer::export()?
?rtracklayer::export()
?rtracklayer::export()
export()
?export()
# Automated bed-graph import for snpsplit-MACS peak calls ##treat_pileup.bdg (Treated Sample normalized to IgG)
for (bedGraph in list.files(MACSbroadpeakIgG1, pattern = "treat_pileup.bdg")) {
bdgGR <- paste0(str_remove(bedGraph, ".clipped.bedGraph"), "_bedGraph")
assign(bdgGR, rtracklayer::import.bedGraph(paste0(MACSbroadpeakIgG1, "/", bedGraph)))
bdgGR@seqinfo = Seqinfo(genome="GRCm39")
print(paste0(MACSbroadpeakIgG1 ,"/", bedGraph))
print(bedGraph)
}
# Automated bed-graph import for snpsplit-MACS peak calls ##treat_pileup.bdg (Treated Sample normalized to IgG)
for (bedGraph in list.files(MACSbroadpeakIgG1, pattern = "treat_pileup.bdg")) {
bdgGR <- paste0(str_remove(bedGraph, ".clipped.bedGraph"), "_bedGraph")
assign(bdgGR, rtracklayer::import.bedGraph(paste0(MACSbroadpeakIgG1, "/", bedGraph)))
print(paste0(MACSbroadpeakIgG1 ,"/", bedGraph))
print(bedGraph)
}
## Add seqInfo
for (bedGraph in ls(pattern = "_bedGraph$")) {
print(bedGraph)
bedGraph@seqinfo = Seqinfo(genome="GRCm39")
}
# Automated bed-graph import for snpsplit-MACS peak calls ##treat_pileup.bdg (Treated Sample normalized to IgG)
for (bedGraph in list.files(MACSbroadpeakIgG1, pattern = "treat_pileup.bdg")) {
# Automated bed-graph import for snpsplit-MACS peak calls ##treat_pileup.bdg (Treated Sample normalized to IgG)
for (bedGraph in list.files(MACSbroadpeakIgG1, pattern = "treat_pileup.bdg")) {
# Automated bed-graph import for snpsplit-MACS peak calls ##treat_pileup.bdg (Treated Sample normalized to IgG)
for (bedGraph in list.files(MACSbroadpeakIgG1, pattern = "treat_pileup.bdg")) {
# Automated bed-graph import for snpsplit-MACS peak calls ##treat_pileup.bdg (Treated Sample normalized to IgG)
for (bedGraph in list.files(MACSbroadpeakIgG1, pattern = "treat_pileup.bdg")) {
bdgGR <- paste0(str_remove(bedGraph, ".clipped.bedGraph"), "_bedGraph")
assign(bdgGR, rtracklayer::import.bedGraph(paste0(MACSbroadpeakIgG1, "/", bedGraph)))
bdgGRobj <- eval(parse(text = bdgGR))
bdgGRobj@seqinfo = Seqinfo(genome="GRCm39"),
# Automated bed-graph import for snpsplit-MACS peak calls ##treat_pileup.bdg (Treated Sample normalized to IgG)
for (bedGraph in list.files(MACSbroadpeakIgG1, pattern = "treat_pileup.bdg")) {
bdgGR <- paste0(str_remove(bedGraph, ".clipped.bedGraph"), "_bedGraph")
assign(bdgGR, rtracklayer::import.bedGraph(paste0(MACSbroadpeakIgG1, "/", bedGraph)))
bdgGRobj <- eval(parse(text = bdgGR))
bdgGRobj@seqinfo = Seqinfo(genome="GRCm39")
print(paste0(MACSbroadpeakIgG1, bedGraph))
print(bedGraph)
}
## export to bigwig
for (bedGraph in ls(pattern = "_bedGraph$")) {
print(bedGraph)
bwOut<- paste0(MACSbroadpeakIgG1, "/", str_remove(bedGraph, "_bedGraph"), ".bw")
print(bwOut)
rtracklayer::export.bw(bedGraph, con = bwOut, format = "bw") ## genome="mm10"
}
View(BCS7_B6_wdupsbroadIgG1con_treat_pileup.bdg_bedGraph)
# Automated bed-graph import for snpsplit-MACS peak calls ##treat_pileup.bdg (Treated Sample normalized to IgG), with designation of GRCm39 annotation
for (bedGraph in list.files(MACSbroadpeakIgG1, pattern = "treat_pileup.bdg")) {
print(paste0(MACSbroadpeakIgG1, bedGraph))
print(bedGraph)
bdgGR <- paste0(str_remove(bedGraph, ".clipped.bedGraph"), "_bedGraph")
print(bdgGR)
assign(bdgGR, rtracklayer::import.bedGraph(paste0(MACSbroadpeakIgG1, "/", bedGraph)))
bdgGRobj <- eval(parse(text = bdgGR))
bdgGRobj@seqinfo = Seqinfo(genome="GRCm39")
}
ls(BCSF_CAST_wdupsbroadIgG1con_treat_pileup.bdg_bedGraph")
ls(BCSF_CAST_wdupsbroadIgG1con_treat_pileup.bdg_bedGraph)
ls("BCSF_CAST_wdupsbroadIgG1con_treat_pileup.bdg_bedGraph"")
ls("BCSF_CAST_wdupsbroadIgG1con_treat_pileup.bdg_bedGraph")
ls(pattern="_bedGraph")
ls(BCSF_CAST_wdupsbroadIgG1con_treat_pileup.bdg_bedGraph)
ls("BCSF_CAST_wdupsbroadIgG1con_treat_pileup.bdg_bedGraph")
ls(pattern="BCSF_CAST_wdupsbroadIgG1con_treat_pileup.bdg_bedGraph")
ls("BCSF_CAST_wdupsbroadIgG1con_treat_pileup.bdg_bedGraph")
ls(BCSF_CAST_wdupsbroadIgG1con_treat_pileup.bdg_bedGraph)
# Automated bed-graph import for snpsplit-MACS peak calls ##treat_pileup.bdg (Treated Sample normalized to IgG), with designation of GRCm39 annotation
for (bedGraph in list.files(MACSbroadpeakIgG1, pattern = "treat_pileup.bdg")) {
print(paste0(MACSbroadpeakIgG1, bedGraph))
print(bedGraph)
bdgGR <- paste0(str_remove(bedGraph, ".clipped.bedGraph"), "_bedGraph")
# print(bdgGR)
assign(bdgGR, rtracklayer::import.bedGraph(paste0(MACSbroadpeakIgG1, "/", bedGraph),
format = bedGraph,
genome = Seqinfo(genome="GRCm39")))
# bdgGRobj <- eval(parse(text = bdgGR))
# bdgGRobj@seqinfo = Seqinfo(genome="GRCm39")
}
# Automated bed-graph import for snpsplit-MACS peak calls ##treat_pileup.bdg (Treated Sample normalized to IgG), with designation of GRCm39 annotation
for (bedGraph in list.files(MACSbroadpeakIgG1, pattern = "treat_pileup.bdg")) {
print(paste0(MACSbroadpeakIgG1, bedGraph))
print(bedGraph)
bdgGR <- paste0(str_remove(bedGraph, ".clipped.bedGraph"), "_bedGraph")
# print(bdgGR)
assign(bdgGR, rtracklayer::import.bedGraph(paste0(MACSbroadpeakIgG1, "/", bedGraph),
format = "bedGraph",
genome = Seqinfo(genome="GRCm39")))
# bdgGRobj <- eval(parse(text = bdgGR))
# bdgGRobj@seqinfo = Seqinfo(genome="GRCm39")
}
## export to bigwig
for (bedGraph in ls(pattern = "_bedGraph$")) {
print(bedGraph)
bwOut<- paste0(MACSbroadpeakIgG1, "/", str_remove(bedGraph, "_bedGraph"), ".bw")
print(bwOut)
rtracklayer::export.bw(bedGraph, con = bwOut, format = "bw") ## genome="mm10"
}
View(BCS1_B6_wdupsbroadIgG1con_treat_pileup.bdg_bedGraph)
# BCS4_B6_wdupsbroadIgG1con_treat_pileup.bdg_bedGraph@seqnames@values <- paste0("chr", BCS4_B6_wdupsbroadIgG1con_treat_pileup.bdg_bedGraph@seqnames@values) dont't set names, but set seqinfo
rtracklayer::export.bw(BCS4_B6_wdupsbroadIgG1con_treat_pileup.bdg_bedGraph, con = "./BCS4_B6_wdupsbroadIgG1con_treat_pileup.bw", format = "bw")
rtracklayer::export.bw(BCS1_B6_wdupsbroadIgG1con_treat_pileup.bdg_bedGraph, con = "./BCS1_B6_wdupsbroadIgG1con_treat_pileup.bw", format = "bw")
## Claude
for (bedGraph_name in ls(pattern = "_bedGraph$")) {
print(bedGraph_name)
bedGraph_obj <- get(bedGraph_name)  # Get the actual object
bwOut <- paste0(MACSbroadpeakIgG1, "/", str_remove(bedGraph_name, "_bedGraph"), ".bw")
print(bwOut)
rtracklayer::export.bw(bedGraph_obj, con = bwOut)  # No need to specify format="bw" here
}
source(CnR_allele_bdgTobw.R)
source(CnR_allelespc_bdgTobw.R)
source("CnR_allelespc_bdgTobw.R")
source("CnR_allelespc_bdgTobw.R")
source("CnR_allelespc_bdgTobw.R")
warnings()
source("CnR_allelespc_bdgTobw.R")
source("CnR_allelespc_bdgTobw.R")
rm(list = ls())
source("CnR_allelespc_bdgTobw.R")
